module init(input logic clk, input logic rst_n,
            input logic en, output logic rdy,
            output logic [7:0] addr, output logic [7:0] wrdata, output logic wren);

// your code here

logic signed [8:0] i;
logic start, done, protocol;



always @(posedge clk or negedge rst_n) begin

if(rst_n == 1'b0) begin
 rdy = 1'b1;
 protocol = 1'b0;
 start = 1'b0;
 i = 9'b111111111;
end else if(protocol == 1'b0 && en == 1'b1)begin 
 start = 1'b1;
 protocol = 1'b1;
 rdy = 1'b0;
end else if (done == 1'b1) begin
 rdy = 1'b1;
end
end

always @(posedge clk) begin
if(start == 1'b1 && done == 1'b0) begin
 i = i + 1;
 wren = 1'b1;
 assign addr = i[7:0];
 assign wrdata = i[7:0];
end else begin
 wren = 1'b0;
end
end


assign done = (i == 255);


endmodule: init